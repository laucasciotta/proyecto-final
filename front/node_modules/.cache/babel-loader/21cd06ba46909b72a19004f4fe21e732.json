{"ast":null,"code":"var _jsxFileName = \"/Users/lautaro/Desktop/rolling/proyecto-final/src/pages/AdminBebidas.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Button, Form, InputGroup, Row, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport Bebidas from './Bebidas';\nimport TablaBebidas from '../components/TablaBebidas';\nimport { leerDeLocalStorage } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function AdminBebidas(props) {\n  _s();\n\n  const {\n    bebidas,\n    setBebidas\n  } = props;\n  const [validated, setValidated] = useState(false);\n  const [input, setInput] = useState({\n    nombre: '',\n    imagen: '',\n    precio: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleChange = event => {\n    // Extraemos y guardamos en variables, el nombre y el valor del input en el que escribió el usuario.\n    // const inputHtml = event.target;\n    // const name = inputHtml.name;\n    // const value = inputHtml.value;\n    const {\n      value,\n      name\n    } = event.target; // Declaramos un objeto que contiene una copia de las propiedades del state input,\n    // más el dato nuevo ingresado usando el name y value del elemento.\n\n    const newInput = { ...input,\n      [name]: value\n    }; // Con ese objeto actualizamos el estado.\n\n    setInput(newInput);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setValidated(true);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === true) {\n      // Forma incorrecta de actualizar un array state, mutando el objeto.\n      // memes.push(input);\n      // Forma correcta, crear un nuevo array, copiando los elementos previos.\n      // const nuevoArray = [...memes, input];\n      setIsLoading(true);\n      const tokenLocal = leerDeLocalStorage('token') || {};\n      const headers = {\n        'x-auth-token': tokenLocal.token\n      };\n      await axios.post('http://localhost:4000/api/bebidas', input, {\n        headers\n      });\n      await props.getBebidas();\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Subir birritas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      className: \"card mt-5 p-5 mx-auto\",\n      style: {\n        width: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"nombre\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"nombre\",\n          onChange: e => handleChange(e),\n          required: true,\n          type: \"text\",\n          placeholder: \"Bebida\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"precio\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Precio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"precio\",\n          onChange: e => handleChange(e),\n          required: true,\n          type: \"number\",\n          placeholder: \"Bebida\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"imagen\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Imagen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          hasValidation: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"imagen\",\n            onChange: e => handleChange(e),\n            type: \"text\",\n            placeholder: \"http://meme.jpg\",\n            \"aria-describedby\": \"inputGroupPrepend\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Imagen requerida!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mx-auto\",\n          disable: isLoading,\n          children: [\"Crear bebida\", isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablaBebidas, {\n      actualizarBebidas: props.actualizarBebidas,\n      bebidas: bebidas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AdminBebidas, \"3g2j9Kr6orDgi/VyMi//DiCAvxs=\");\n\n_c = AdminBebidas;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminBebidas\");","map":{"version":3,"sources":["/Users/lautaro/Desktop/rolling/proyecto-final/src/pages/AdminBebidas.jsx"],"names":["React","useState","Button","Form","InputGroup","Row","Spinner","axios","Bebidas","TablaBebidas","leerDeLocalStorage","AdminBebidas","props","bebidas","setBebidas","validated","setValidated","input","setInput","nombre","imagen","precio","isLoading","setIsLoading","handleChange","event","value","name","target","newInput","handleSubmit","preventDefault","stopPropagation","form","currentTarget","checkValidity","tokenLocal","headers","token","post","getBebidas","width","e","actualizarBebidas"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { Button, Form, InputGroup, Row, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport Bebidas from './Bebidas';\nimport TablaBebidas from '../components/TablaBebidas'\nimport { leerDeLocalStorage } from '../utils/localStorage';\n\nexport  function AdminBebidas(props) {\n    const { bebidas, setBebidas } = props;\n    const [validated, setValidated] = useState(false);\n    const [input, setInput] = useState({ nombre: '', imagen: '',precio:'' });\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleChange = (event) => {\n        // Extraemos y guardamos en variables, el nombre y el valor del input en el que escribió el usuario.\n        // const inputHtml = event.target;\n        // const name = inputHtml.name;\n        // const value = inputHtml.value;\n        const { value, name } = event.target;\n\n        // Declaramos un objeto que contiene una copia de las propiedades del state input,\n        // más el dato nuevo ingresado usando el name y value del elemento.\n        const newInput = { ...input, [name]: value };\n        // Con ese objeto actualizamos el estado.\n        setInput(newInput);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        setValidated(true);\n        const form = event.currentTarget;\n        if (form.checkValidity() === true) {\n            // Forma incorrecta de actualizar un array state, mutando el objeto.\n            // memes.push(input);\n\n            // Forma correcta, crear un nuevo array, copiando los elementos previos.\n            // const nuevoArray = [...memes, input];\n            setIsLoading(true);\n\n            const tokenLocal = leerDeLocalStorage('token') || {};\n            const headers = { 'x-auth-token': tokenLocal.token };\n            await axios.post('http://localhost:4000/api/bebidas', input, { headers });\n\n            await props.getBebidas();\n\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <>\n            <h2 className=\"mt-5\">Subir birritas</h2>\n            <Form\n                onSubmit={handleSubmit}\n                className=\"card mt-5 p-5 mx-auto\"\n                style={{ width: '500px' }}\n            >\n                <Form.Group controlId=\"nombre\">\n                    <Form.Label>nombre</Form.Label>\n                    <Form.Control\n                        name=\"nombre\"\n                        onChange={(e) => handleChange(e)}\n                        required\n                        type=\"text\"\n                        placeholder=\"Bebida\"\n                    />\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group controlId=\"precio\">\n                    <Form.Label>Precio</Form.Label>\n                    <Form.Control\n                        name=\"precio\"\n                        onChange={(e) => handleChange(e)}\n                        required\n                        type=\"number\"\n                        placeholder=\"Bebida\"\n                    />\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group controlId=\"imagen\">\n                    <Form.Label>Imagen</Form.Label>\n                    <InputGroup hasValidation>\n                        <Form.Control\n                            name=\"imagen\"\n                            onChange={(e) => handleChange(e)}\n                            type=\"text\"\n                            placeholder=\"http://meme.jpg\"\n                            aria-describedby=\"inputGroupPrepend\"\n                            required\n                        />\n                        <Form.Control.Feedback type=\"invalid\">Imagen requerida!</Form.Control.Feedback>\n                    </InputGroup>\n                </Form.Group>\n                <Row>\n                    <Button type=\"submit\" className=\"mx-auto\" disable={isLoading}>\n                        Crear bebida\n                        {isLoading && (\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                        )}\n                    </Button>\n                </Row>\n            </Form>\n            <TablaBebidas actualizarBebidas={props.actualizarBebidas} bebidas={bebidas} />\n\n        </>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}