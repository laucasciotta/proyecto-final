{"ast":null,"code":"var _jsxFileName = \"/Users/lautaro/Desktop/rolling/proyecto-final/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Card, Col, Container, Form, InputGroup, Row } from 'react-bootstrap';\nimport axios from 'axios';\nimport { guardarEnLocalStorage } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  requestUserData\n}) {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  const [input, setInput] = useState({\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n\n  const handleChange = event => {\n    // Extraemos y guardamos en variables, el nombre y el valor del input en el que escribió el usuario.\n    const {\n      value,\n      name\n    } = event.target; // Declaramos un objeto que contiene una copia de las propiedades del state input,\n    // más el dato nuevo ingresado usando el name y value del elemento.\n\n    const newInput = { ...input,\n      [name]: value\n    };\n    setInput(newInput);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setValidated(true);\n    const form = event.currentTarget; // Chequea que los campos del formulario sean válidos.\n\n    if (form.checkValidity() === true) {\n      try {\n        //Consultar a el back a la ruta /login, con el usuario y contraseña.\n        const response = await axios.post('http://localhost:4000/api/auth/login', input);\n        const {\n          token,\n          name\n        } = response.data;\n        guardarEnLocalStorage({\n          key: 'token',\n          value: {\n            token\n          }\n        });\n        alert('Bienvenido ' + name); //El push redirecciona a la pantalla indicada en el parametro.\n\n        await requestUserData();\n        history.push('/admin');\n      } catch (error) {\n        console.error(error);\n\n        if (error.response.data) {\n          alert(JSON.stringify(error.response.data));\n        } else {\n          alert('Error de conexion');\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 8,\n        md: 6,\n        className: \"mx-auto my-5\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"border\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"bg-info\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-white\",\n              children: \"MeMes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              validated: validated,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"validationCustom02\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: \"email\",\n                  value: input.email,\n                  onChange: e => handleChange(e),\n                  required: true,\n                  type: \"email\",\n                  placeholder: \"Last name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  children: \"Looks good!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"validationCustomUsername\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  hasValidation: true,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    value: input.password,\n                    minLength: \"6\",\n                    name: \"password\",\n                    onChange: e => handleChange(e),\n                    type: \"password\",\n                    placeholder: \"****\",\n                    \"aria-describedby\": \"inputGroupPrepend\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Password is required!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: \"mx-auto mt-4\",\n                  children: \"Iniciar Sesi\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"sNENVKFsLgZmXqzAsJqg74k9SH0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/lautaro/Desktop/rolling/proyecto-final/src/pages/Login.jsx"],"names":["useState","useHistory","Button","Card","Col","Container","Form","InputGroup","Row","axios","guardarEnLocalStorage","Login","requestUserData","validated","setValidated","input","setInput","email","password","history","handleChange","event","value","name","target","newInput","handleSubmit","preventDefault","stopPropagation","form","currentTarget","checkValidity","response","post","token","data","key","alert","push","error","console","JSON","stringify","e"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Card, Col, Container, Form, InputGroup, Row } from 'react-bootstrap';\nimport axios from 'axios';\nimport { guardarEnLocalStorage } from '../utils/localStorage';\n\nexport default function Login({ requestUserData }) {\n    const [validated, setValidated] = useState(false);\n    const [input, setInput] = useState({ email: '', password: '' });\n    const history = useHistory();\n\n    const handleChange = (event) => {\n        // Extraemos y guardamos en variables, el nombre y el valor del input en el que escribió el usuario.\n        const { value, name } = event.target;\n        // Declaramos un objeto que contiene una copia de las propiedades del state input,\n        // más el dato nuevo ingresado usando el name y value del elemento.\n        const newInput = { ...input, [name]: value };\n        setInput(newInput);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        setValidated(true);\n        const form = event.currentTarget;\n\n        // Chequea que los campos del formulario sean válidos.\n        if (form.checkValidity() === true) {\n            try {\n                //Consultar a el back a la ruta /login, con el usuario y contraseña.\n                const response = await axios.post('http://localhost:4000/api/auth/login', input);\n                const { token, name } = response.data;\n                guardarEnLocalStorage({ key: 'token', value: { token } });\n                alert('Bienvenido ' + name);\n                //El push redirecciona a la pantalla indicada en el parametro.\n                await requestUserData();\n                history.push('/admin');\n            } catch (error) {\n                console.error(error);\n                if (error.response.data) {\n                    alert(JSON.stringify(error.response.data));\n                } else {\n                    alert('Error de conexion');\n                }\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <Row>\n                <Col xs={12} sm={8} md={6} className=\"mx-auto my-5\">\n                    <Card className=\"border\">\n                        <Card.Header className=\"bg-info\">\n                            <h4 className=\"text-white\">MeMes</h4>\n                        </Card.Header>\n                        <Card.Body>\n                            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                                <Form.Group controlId=\"validationCustom02\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control\n                                        name=\"email\"\n                                        value={input.email}\n                                        onChange={(e) => handleChange(e)}\n                                        required\n                                        type=\"email\"\n                                        placeholder=\"Last name\"\n                                    />\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group controlId=\"validationCustomUsername\">\n                                    <Form.Label>Password</Form.Label>\n                                    <InputGroup hasValidation>\n                                        <Form.Control\n                                            value={input.password}\n                                            minLength=\"6\"\n                                            name=\"password\"\n                                            onChange={(e) => handleChange(e)}\n                                            type=\"password\"\n                                            placeholder=\"****\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Password is required!\n                                        </Form.Control.Feedback>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Row>\n                                    <Button type=\"submit\" className=\"mx-auto mt-4\">\n                                        Iniciar Sesión\n                                    </Button>\n                                </Row>\n                                <Row>\n                                    {/* <Link className=\"mx-auto mt-2\" to=\"/register\">\n                                        ¿No tiene una cuenta? Cree una aquí\n                                    </Link> */}\n                                </Row>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}